{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js\";\nimport React, { useRef, useState } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\nimport { useEffect } from 'react';\nexport default function QuizForm() {\n  const initialState = {\n    writers,\n    quizData: createSelectionList(writers)\n  };\n  const initialCount = Number(window.localStorage.getItem('progress') || 0); //const initialWrongAnswers = Number(window.localStorage.getItem('wrongAnswers') || 0)\n\n  const initialRightAnswers = Number(window.localStorage.getItem('rightAnswers'));\n  let [progress, setProgress] = useState(initialCount);\n  let [rightAnswers, setRightAnswers] = useState(initialRightAnswers);\n  let [wrongAnswers, setWrongAnswers] = useState(0);\n  useEffect(() => {\n    localStorage.setItem(\"progress\", progress); //localStorage.setItem('wrongAnswers', wrongAnswers);\n  }, [progress, rightAnswers]);\n  const history = useHistory();\n  const cardBackground = useRef(0);\n  let handler;\n\n  const refresh = async () => {\n    handler = setTimeout(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 10);\n      history.push({\n        pathname: \"/empty\"\n      });\n      history.goBack();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    return () => handler && clearTimeout(handler);\n  }, [handler]);\n\n  const selectBookHandler = title => {\n    let isCorrect = initialState.quizData.checkAnswer(title);\n\n    if (isCorrect) {\n      cardBackground.current.style.backgroundColor = \"green\";\n      setRightAnswers(prevAnswers => prevAnswers + 1);\n      refresh();\n    } else {\n      cardBackground.current.style.backgroundColor = \"#FF7F50\";\n      refresh();\n    }\n  };\n\n  const onFinishQuiz = () => {\n    localStorage.removeItem('progress');\n    refresh();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    className: \"quiz_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"quiz_card\",\n    ref: cardBackground,\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: \"quiz_card_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"quiz_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Book Quiz\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Select a right book\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"quiz_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Turn, {\n    quizData: initialState.quizData,\n    progress: progress,\n    onFinishQuiz: onFinishQuiz,\n    selectBookHandler: selectBookHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js"],"names":["React","useRef","useState","createSelectionList","writers","Container","Card","CardContent","Typography","Turn","useHistory","ProgressBar","useEffect","QuizForm","initialState","quizData","initialCount","Number","window","localStorage","getItem","initialRightAnswers","progress","setProgress","rightAnswers","setRightAnswers","wrongAnswers","setWrongAnswers","setItem","history","cardBackground","handler","refresh","setTimeout","prevProgress","push","pathname","goBack","clearTimeout","selectBookHandler","title","isCorrect","checkAnswer","current","style","backgroundColor","prevAnswers","onFinishQuiz","removeItem"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\nimport { useEffect } from 'react';\n\nexport default function QuizForm() {\n\n    const initialState = {\n        writers,\n        quizData: createSelectionList(writers),\n    }\n    const initialCount = Number(window.localStorage.getItem('progress') || 0)\n    //const initialWrongAnswers = Number(window.localStorage.getItem('wrongAnswers') || 0)\n    const initialRightAnswers = Number(window.localStorage.getItem('rightAnswers'))\n\n\n    let [progress, setProgress] = useState(initialCount);\n    let [rightAnswers, setRightAnswers] = useState(initialRightAnswers);\n    let [wrongAnswers, setWrongAnswers] = useState(0);\n\n    useEffect(() => {\n        localStorage.setItem(\"progress\", progress);\n        //localStorage.setItem('wrongAnswers', wrongAnswers);\n      }, [progress, rightAnswers]);\n\n    const history = useHistory();\n    const cardBackground = useRef(0);\n\n\n    let handler;\n\n    const refresh = async () => {\n        handler = setTimeout(() => { \n            setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10))\n            history.push({ pathname: \"/empty\" });\n            history.goBack();\n        }, 1000);   \n      };\n\n    useEffect(() => {\n        return () => handler && clearTimeout(handler);\n      }, [handler]);\n  \n    const selectBookHandler =  (title) => {\n\n        let isCorrect = initialState.quizData.checkAnswer(title);\n        if(isCorrect ) {\n            cardBackground.current.style.backgroundColor = \"green\";\n            setRightAnswers(prevAnswers =>   prevAnswers+ 1 );  \n\n            refresh();\n\n               \n        }\n        else {\n            cardBackground.current.style.backgroundColor = \"#FF7F50\";\n            refresh();    \n        }\n\n    }\n\n\n    const onFinishQuiz = () => {\n          localStorage.removeItem('progress');\n          refresh();\n      }\n   \n    return (\n        <Container maxWidth=\"md\" className=\"quiz_container\" >\n            <div className=\"progressBar\">\n                <ProgressBar progress={progress} /> \n            </div>\n            <Card className=\"quiz_card\" ref={cardBackground} style={{backgroundColor: \"white\" }}>\n                <CardContent className=\"quiz_card_content\">\n                    <header className=\"quiz_header\">\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Book Quiz\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            Select a right book\n                        </Typography>\n                    </header>\n                    <section className=\"quiz_section\">\n                        <Turn\n                          quizData={initialState.quizData}\n                          progress={progress}\n                          onFinishQuiz={onFinishQuiz}\n                         selectBookHandler={selectBookHandler} />\n                    </section>\n                </CardContent>\n            </Card> \n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js\";\nimport React, { useRef, useState } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\nimport { useEffect } from 'react';\nimport ResultModal from '../../UI/ProgressBar/Modal/Modal';\nexport default function QuizForm() {\n  const initialState = {\n    writers,\n    quizData: createSelectionList(writers)\n  };\n  const initialCount = Number(window.localStorage.getItem('progress') || 0);\n  const initialWrongAnswers = Number(window.localStorage.getItem('wrongAnswers') || 0);\n  const initialRightAnswers = Number(window.localStorage.getItem('rightAnswers') || 0);\n  let [progress, setProgress] = useState(initialCount);\n  let [rightAnswers, setRightAnswers] = useState(initialRightAnswers);\n  let [wrongAnswers, setWrongAnswers] = useState(initialWrongAnswers);\n  const [openResultModal, setOpenResultModal] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(\"progress\", progress);\n    localStorage.setItem('rightAnswers', rightAnswers);\n    localStorage.setItem('wrongAnswers', wrongAnswers);\n  }, [progress, rightAnswers, wrongAnswers]);\n  const history = useHistory();\n  const cardBackground = useRef(0);\n\n  const refresh = async () => {\n    setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 10);\n    history.push({\n      pathname: \"/empty\"\n    });\n    history.goBack();\n  };\n\n  const selectBookHandler = title => {\n    let isCorrect = initialState.quizData.checkAnswer(title);\n\n    if (isCorrect) {\n      cardBackground.current.style.backgroundColor = \"green\";\n      setTimeout(() => {\n        setRightAnswers(prevAnswers => prevAnswers + 1);\n        refresh();\n      }, 1000);\n    } else {\n      cardBackground.current.style.backgroundColor = \"#FF7F50\";\n      setTimeout(() => {\n        setWrongAnswers(prevAnswers => prevAnswers + 1);\n        refresh();\n      }, 1000);\n    }\n  };\n\n  const handleOpenResultModal = () => {\n    setOpenResultModal(true);\n  };\n\n  const onFinishQuiz = () => {\n    localStorage.removeItem('progress');\n    localStorage.removeItem('wrongAnswers');\n    localStorage.removeItem('rightAnswers');\n    setOpenResultModal(false);\n    refresh();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ResultModal, {\n    onFinishQuiz: onFinishQuiz,\n    open: openResultModal,\n    rightAnswers: rightAnswers,\n    wrongAnswers: wrongAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    className: \"quiz_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"quiz_card\",\n    ref: cardBackground,\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: \"quiz_card_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"quiz_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Book Quiz\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Select a right book\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"quiz_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Turn, {\n    handleOpenResultModal: handleOpenResultModal,\n    quizData: initialState.quizData,\n    progress: progress,\n    onFinishQuiz: onFinishQuiz,\n    selectBookHandler: selectBookHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js"],"names":["React","useRef","useState","createSelectionList","writers","Container","Card","CardContent","Typography","Turn","useHistory","ProgressBar","useEffect","ResultModal","QuizForm","initialState","quizData","initialCount","Number","window","localStorage","getItem","initialWrongAnswers","initialRightAnswers","progress","setProgress","rightAnswers","setRightAnswers","wrongAnswers","setWrongAnswers","openResultModal","setOpenResultModal","setItem","history","cardBackground","refresh","prevProgress","push","pathname","goBack","selectBookHandler","title","isCorrect","checkAnswer","current","style","backgroundColor","setTimeout","prevAnswers","handleOpenResultModal","onFinishQuiz","removeItem"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\nimport { useEffect } from 'react';\nimport ResultModal from '../../UI/ProgressBar/Modal/Modal';\n\nexport default function QuizForm() {\n\n\tconst initialState = {\n\t\twriters,\n\t\tquizData: createSelectionList(writers),\n    };\n    \n\tconst initialCount = Number(window.localStorage.getItem('progress') || 0);\n\tconst initialWrongAnswers = Number(window.localStorage.getItem('wrongAnswers') || 0);\n\tconst initialRightAnswers = Number(window.localStorage.getItem('rightAnswers') || 0);\n\n\tlet [progress, setProgress] = useState(initialCount);\n\tlet [rightAnswers, setRightAnswers] = useState(initialRightAnswers);\n\tlet [wrongAnswers, setWrongAnswers] = useState(initialWrongAnswers);\n\tconst [openResultModal, setOpenResultModal] = useState(false);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"progress\", progress);\n\t\tlocalStorage.setItem('rightAnswers', rightAnswers);\n\t\tlocalStorage.setItem('wrongAnswers', wrongAnswers);\n\t}, [progress, rightAnswers, wrongAnswers]);\n\n\tconst history = useHistory();\n\tconst cardBackground = useRef(0);\n\n\tconst refresh = async () => {\n\t\tsetProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n\t\thistory.push({\n\t\t\tpathname: \"/empty\"\n\t\t});\n\t\thistory.goBack();\n\n\t};\n\n\tconst selectBookHandler = (title) => {\n\t\tlet isCorrect = initialState.quizData.checkAnswer(title);\n\t\tif (isCorrect) {\n\t\t\tcardBackground.current.style.backgroundColor = \"green\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetRightAnswers(prevAnswers => prevAnswers + 1);\n\t\t\t\trefresh();\n\t\t\t}, 1000)\n\t\t} else {\n\t\t\tcardBackground.current.style.backgroundColor = \"#FF7F50\";\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetWrongAnswers(prevAnswers => prevAnswers + 1);\n\t\t\t\trefresh();\n\t\t\t}, 1000);\n\t\t}\n\t};\n\n\tconst handleOpenResultModal = () => {\n\t\tsetOpenResultModal(true);\n\t};\n\n\tconst onFinishQuiz = () => {\n\t\tlocalStorage.removeItem('progress');\n\t\tlocalStorage.removeItem('wrongAnswers');\n\t\tlocalStorage.removeItem('rightAnswers');\n\t\tsetOpenResultModal(false);\n\t\trefresh();\n\t};\n\n\treturn (\n\t\t <React.Fragment>\n            <ResultModal\n             onFinishQuiz={onFinishQuiz}\n             open={openResultModal}\n             rightAnswers={rightAnswers}\n             wrongAnswers={wrongAnswers}\n              />\n         <Container maxWidth=\"md\" className=\"quiz_container\" >\n            <div className=\"progressBar\">\n                <ProgressBar progress={progress} /> \n            </div>\n            <Card className=\"quiz_card\" ref={cardBackground} style={{backgroundColor: \"white\" }}>\n                <CardContent className=\"quiz_card_content\">\n                    <header className=\"quiz_header\">\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Book Quiz\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            Select a right book\n                        </Typography>\n                    </header>\n                    <section className=\"quiz_section\">\n                        <Turn\n                          handleOpenResultModal={handleOpenResultModal}\n                          quizData={initialState.quizData}\n                          progress={progress}\n                          onFinishQuiz={onFinishQuiz}\n                         selectBookHandler={selectBookHandler} />\n                    </section>\n                </CardContent>\n            </Card> \n        </Container>\n    </React.Fragment>\n\t);\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { shuffle, sample, reduce } from 'underscore';\nexport const writers = [{\n  name: 'Eno Raud',\n  imageUrl: 'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n  books: ['Sipsik', 'Naksitrallid']\n}, {\n  name: 'Jaan Kross',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/0/03/Jaan_Kross_%281987%29_by_Guenter_Prust.jpg',\n  books: ['Kolme katku vahel', 'Tahtamaa', 'Wikmani poisid', 'Keisri hull']\n}, {\n  name: 'A. H. Tammsaare',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Tõde ja õigus', 'Kõrboja peremees', \"Ma armastasin sakslast\", 'Varblane']\n}, {\n  name: 'Juhan Liiv',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/95/Juhan_Liiv.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Helin', 'Vari', \"Mitte igaühele\"]\n}, {\n  name: 'Fr. Tuglas',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Väike Illimar', 'Meri', 'Popi ja Huhuu']\n}, {\n  name: 'Oskar Luts',\n  imageUrl: 'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Suvi', 'Kevade', 'Talve', 'Sügis', \"Tagahoovis\"]\n}];\nexport const createSelectionList = authors => {\n  const randomBooksArray = reduce(authors, (allBooks, author) => {\n    let oneRandomBookArray = author.books[Math.floor(Math.random() * author.books.length)];\n    return allBooks.concat(oneRandomBookArray);\n  }, []);\n\n  function shuffle(o) {\n    //try this shuffle function\n    for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\n    return o;\n  }\n\n  ;\n  console.log(shuffleArray(authors));\n  let fourRandomBooks = shuffle(randomBooksArray).slice(0, 4);\n  const fourBooksList = sample(fourRandomBooks);\n  return {\n    books: fourRandomBooks,\n    a: shuffle(authors).find(author => author.books.some(title => title === fourBooksList)),\n    checkAnswer: function (title) {\n      return this.a.books.some(t => {\n        return t === title;\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Writers.js"],"names":["shuffle","sample","reduce","writers","name","imageUrl","books","imageSource","createSelectionList","authors","randomBooksArray","allBooks","author","oneRandomBookArray","Math","floor","random","length","concat","o","j","x","i","console","log","shuffleArray","fourRandomBooks","slice","fourBooksList","a","find","some","title","checkAnswer","t"],"mappings":"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","sourcesContent":["import {shuffle, sample, reduce} from 'underscore';\n\n\nexport const writers =[\n    {\n    name: 'Eno Raud',\n    imageUrl:'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n    books: ['Sipsik', 'Naksitrallid']\n    },\n    {\n    name: 'Jaan Kross',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/0/03/Jaan_Kross_%281987%29_by_Guenter_Prust.jpg',\n    books: ['Kolme katku vahel', 'Tahtamaa', 'Wikmani poisid', 'Keisri hull']\n    },\n    {\n    name: 'A. H. Tammsaare',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Tõde ja õigus', 'Kõrboja peremees', \"Ma armastasin sakslast\", 'Varblane']\n    },\n    {\n      name: 'Juhan Liiv',\n      imageUrl:'https://upload.wikimedia.org/wikipedia/commons/9/95/Juhan_Liiv.jpg',\n      imageSource:'Wikimedia Commons',\n      books: ['Helin', 'Vari', \"Mitte igaühele\"]\n      },\n    {\n    name: 'Fr. Tuglas',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Väike Illimar', 'Meri', 'Popi ja Huhuu']\n    },\n    {\n    name: 'Oskar Luts',\n    imageUrl:'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Suvi', 'Kevade', 'Talve', 'Sügis', \"Tagahoovis\"]\n    }\n]\n\n\n\nexport const createSelectionList = (authors) => {\n  const randomBooksArray = reduce(authors, (allBooks, author) => {\n    let oneRandomBookArray = author.books[Math.floor(Math.random() * author.books.length)];\n    return allBooks.concat(oneRandomBookArray)\n  }, []);\n\n  function shuffle(o){ //try this shuffle function\n    for(var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n    return o;\n};\n\n\nconsole.log(shuffleArray(authors))\n  \n  let fourRandomBooks = shuffle(randomBooksArray).slice(0, 4); \n  const fourBooksList = sample(fourRandomBooks);\n  \n  \n    return{\n      books: fourRandomBooks,\n      a: shuffle(authors).find((author)=>author.books.some((title)=>title===fourBooksList)),\n      \n      checkAnswer: function(title){\n          return this.a.books.some( (t) => {\n             return t === title;\n          });\n       },\n       \n    }\n  \n  \n}\n"]},"metadata":{},"sourceType":"module"}
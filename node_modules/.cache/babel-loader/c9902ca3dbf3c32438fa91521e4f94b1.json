{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\nexport default function QuizForm() {\n  const initialState = {\n    writers,\n    quizData: createSelectionList(writers)\n  };\n  const [progress, setProgress] = useState(0);\n  const [isCorrect, setIsCorrect] = useState();\n  const history = useHistory();\n  const cardBackground = useRef(0);\n\n  const selectBookHandler = title => {\n    let checkAnswer = initialState.quizData.checkAnswer(title);\n    setIsCorrect(checkAnswer);\n  };\n\n  useEffect(() => {\n    if (isCorrect) {\n      cardBackground.current.style.backgroundColor = \"green\";\n      setTimeout(() => {\n        setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 10);\n        history.push({\n          pathname: \"/empty\"\n        });\n        history.goBack();\n      }, 1000);\n    } else {\n      cardBackground.current.style.backgroundColor = \"#FF7F50\";\n      setTimeout(() => {\n        setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 10);\n        history.push({\n          pathname: \"/empty\"\n        });\n        history.goBack();\n      }, 2000);\n    }\n  }, [history, isCorrect]);\n  useEffect(() => {\n    const parsedCount = Number(localStorage.getItem(\"progress\") || 0);\n    setProgress(parsedCount);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"progress\", progress);\n  }, [progress]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    className: \"quiz_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    progress: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"quiz_card\",\n    ref: cardBackground,\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: \"quiz_card_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"quiz_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Book Quiz\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Select a right book\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"quiz_section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Turn, {\n    quizData: initialState.quizData,\n    selectBookHandler: selectBookHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Quiz/QuizForm/QuizForm.js"],"names":["React","useRef","useState","useEffect","createSelectionList","writers","Container","Card","CardContent","Typography","Turn","useHistory","ProgressBar","QuizForm","initialState","quizData","progress","setProgress","isCorrect","setIsCorrect","history","cardBackground","selectBookHandler","title","checkAnswer","current","style","backgroundColor","setTimeout","prevProgress","push","pathname","goBack","parsedCount","Number","localStorage","getItem","setItem"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { createSelectionList, writers } from '../../Writers';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './QuizForm.css';\nimport Turn from '../Turn/Turn';\nimport { useHistory } from 'react-router';\nimport './QuizForm.css';\nimport ProgressBar from '../../UI/ProgressBar/ProgressBar';\n\nexport default function QuizForm() {\n\n    const initialState = {\n        writers,\n        quizData: createSelectionList(writers),\n    }\n    const [progress, setProgress] = useState(0);\n    const [isCorrect, setIsCorrect] = useState();\n    const history = useHistory();\n    const cardBackground = useRef(0);\n  \n    const selectBookHandler = (title) => {\n        let checkAnswer = initialState.quizData.checkAnswer(title);\n        setIsCorrect(checkAnswer);\n    }\n    \n    useEffect(() => {\n        if(isCorrect) {\n            cardBackground.current.style.backgroundColor = \"green\"\n            setTimeout(() => {  \n                setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n                history.push({ pathname: \"/empty\" });\n                history.goBack();\n            }, 1000);   \n        }\n        else {\n            cardBackground.current.style.backgroundColor = \"#FF7F50\"\n            setTimeout(() => {  \n                setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n                history.push({ pathname: \"/empty\" });\n                history.goBack();\n            }, 2000);   \n        }\n    \n        \n    }, [history, isCorrect]);\n\n       \n\n    useEffect(() => {\n        const parsedCount = Number(localStorage.getItem(\"progress\") || 0);\n        setProgress(parsedCount)\n      }, [])\n    \n    useEffect(() => {\n        localStorage.setItem(\"progress\", progress);\n      }, [progress])\n   \n    return (\n        <React.Fragment>     \n        <Container maxWidth=\"md\" className=\"quiz_container\" >\n            <ProgressBar progress={progress}  />\n            <Card className=\"quiz_card\" ref={cardBackground} style={{backgroundColor: \"white\" }}>\n                <CardContent className=\"quiz_card_content\">\n                    <header className=\"quiz_header\">\n                        <Typography variant=\"h5\" component=\"h2\">\n                            Book Quiz\n                        </Typography>\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                            Select a right book\n                        </Typography>\n                    </header>\n                    <section className=\"quiz_section\"         >\n                        <Turn quizData={initialState.quizData}   selectBookHandler={selectBookHandler} />\n                    </section>\n                </CardContent>\n            </Card>\n        </Container>\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/martinraba/Desktop/writersquiz/src/App.js\";\nimport React, { useMemo } from 'react';\nimport { Provider } from 'react-redux';\nimport { writers, createSelectionList } from './Writers';\nimport { createStore } from 'redux';\nimport './App.css';\nimport QuizForm from './Quiz/QuizForm/QuizForm';\nexport const initialState = {\n  turnData: createSelectionList(writers)\n};\nconst actionHandlers = {\n  'ANSWER_SELECTED': (state, action) => Object.assign({}, state, {\n    answerStatus: getAnswerStatus(action.answer, state.turnData)\n  }),\n  'CONTINUE': (state, action) => Object.assign({}, state, {\n    answerStatus: 'none',\n    turnData: getTurnData(state.authors)\n  })\n};\n\nconst reducer = (state = initialState, action) => {\n  let actionHandler = actionHandlers[action.type];\n  return actionHandler && actionHandler(state, action) || state;\n};\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst selectBookHandler = answer => {\n  let isCorrect = initialState.turnData.checkAnswer(answer);\n  return isCorrect ? 'correct' : 'incorrect';\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(QuizForm, {\n    selectBookHandler: selectBookHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/App.js"],"names":["React","useMemo","Provider","writers","createSelectionList","createStore","QuizForm","initialState","turnData","actionHandlers","state","action","Object","assign","answerStatus","getAnswerStatus","answer","getTurnData","authors","reducer","actionHandler","type","store","window","__REDUX_DEVTOOLS_EXTENSION__","selectBookHandler","isCorrect","checkAnswer","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,OAAT,EAAkBC,mBAAlB,QAA6C,WAA7C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAEJ,mBAAmB,CAACD,OAAD;AADH,CAArB;AAKP,MAAMM,cAAc,GAAG;AACtB,qBAAmB,CAACC,KAAD,EAAQC,MAAR,KAAmBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAAEI,IAAAA,YAAY,EAAEC,eAAe,CAACJ,MAAM,CAACK,MAAR,EAAgBN,KAAK,CAACF,QAAtB;AAA/B,GAAzB,CADhB;AAEtB,cAAY,CAACE,KAAD,EAAQC,MAAR,KAAmBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAAEI,IAAAA,YAAY,EAAE,MAAhB;AAAwBN,IAAAA,QAAQ,EAAES,WAAW,CAACP,KAAK,CAACQ,OAAP;AAA7C,GAAzB;AAFT,CAAvB;;AAIA,MAAMC,OAAO,GAAG,CAACT,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,MAAIS,aAAa,GAAGX,cAAc,CAACE,MAAM,CAACU,IAAR,CAAlC;AAEA,SAAQD,aAAa,IAAIA,aAAa,CAACV,KAAD,EAAQC,MAAR,CAA/B,IAAmDD,KAA1D;AACA,CAJD;;AAMA,MAAMY,KAAK,GAAGjB,WAAW,CACxBc,OADwB,EAExBI,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFf,CAAzB;;AAMA,MAAMC,iBAAiB,GAAIT,MAAD,IAAY;AACpC,MAAIU,SAAS,GAAGnB,YAAY,CAACC,QAAb,CAAsBmB,WAAtB,CAAkCX,MAAlC,CAAhB;AACA,SAAOU,SAAS,GAAG,SAAH,GAAe,WAA/B;AACD,CAHD;;AAQA,SAASE,GAAT,GAAe;AAIV,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,iBAAiB,EAAEG,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAQJ;;AAED,eAAeG,GAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport {Provider} from 'react-redux'\nimport { writers, createSelectionList } from './Writers';\nimport { createStore } from 'redux';\n\nimport './App.css';\nimport QuizForm from './Quiz/QuizForm/QuizForm';\n\nexport const initialState = {\n  turnData: createSelectionList(writers),\n  \n}\n\nconst actionHandlers = {\n\t'ANSWER_SELECTED': (state, action) => Object.assign({}, state, { answerStatus: getAnswerStatus(action.answer, state.turnData) }),\n\t'CONTINUE': (state, action) => Object.assign({}, state, { answerStatus: 'none', turnData: getTurnData(state.authors) }),\n};\nconst reducer = (state = initialState, action) => {\n\tlet actionHandler = actionHandlers[action.type];\n\n\treturn (actionHandler && actionHandler(state, action)) || state;\n};\n\nconst store = createStore(\n\treducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nconst selectBookHandler = (answer) => {\n  let isCorrect = initialState.turnData.checkAnswer(answer);\n  return isCorrect ? 'correct' : 'incorrect'\n}\n\n\n\n\nfunction App() {\n\n\n\n     return (\n       <div>\n         <Provider store={store}>\n           <QuizForm selectBookHandler={selectBookHandler} />\n          </Provider>\n      \n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
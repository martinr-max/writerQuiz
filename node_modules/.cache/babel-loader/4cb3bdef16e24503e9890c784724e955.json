{"ast":null,"code":"import { shuffle, sample, reduce } from 'underscore';\nexport const writers = [{\n  name: 'Eno Raud',\n  imageUrl: 'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n  books: ['Sipsik', 'Naksitrallid']\n}, {\n  name: 'Jaan Kross',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/0/03/Jaan_Kross_%281987%29_by_Guenter_Prust.jpg',\n  books: ['Kolme katku vahel', 'Tahtamaa', 'Wikmani poisid']\n}, {\n  name: 'A. H. Tammsaare',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Tõde ja õigus', 'Kõrboja peremees', \"Ma armastasin sakslast\"]\n}, {\n  name: 'Juhan Liiv',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/9/95/Juhan_Liiv.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Helin', 'Vari', \"Mitte igaühele\"]\n}, {\n  name: 'Fr. Tuglas',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Väike Illimar', 'Meri', 'Popi ja Huhhuu']\n}, {\n  name: 'Oskar Luts',\n  imageUrl: 'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Suvi', 'Kevade', 'Talve']\n}];\nexport const createSelectionList = authors => {\n  const allbooks = reduce(authors, (p, c) => {\n    return p.concat(c.books);\n  }, []);\n\n  function shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  }\n\n  let threeRandomBooks = shuffle(allbooks).slice(0, 3);\n  const fourBooksList = sample(threeRandomBooks);\n  return {\n    books: threeRandomBooks,\n    author: authors.find(author => author.books.some(title => title === fourBooksList)),\n    checkAnswer: function (title) {\n      return this.author.books.some(function (t) {\n        return t === title;\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Writers.js"],"names":["shuffle","sample","reduce","writers","name","imageUrl","books","imageSource","createSelectionList","authors","allbooks","p","c","concat","array","currentIndex","length","temporaryValue","randomIndex","i","j","Math","floor","random","threeRandomBooks","slice","fourBooksList","author","find","some","title","checkAnswer","t"],"mappings":"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","sourcesContent":["import {shuffle, sample, reduce} from 'underscore';\n\n\nexport const writers =[\n    {\n    name: 'Eno Raud',\n    imageUrl:'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n    books: ['Sipsik', 'Naksitrallid']\n    },\n    {\n    name: 'Jaan Kross',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/0/03/Jaan_Kross_%281987%29_by_Guenter_Prust.jpg',\n    books: ['Kolme katku vahel', 'Tahtamaa', 'Wikmani poisid']\n    },\n    {\n    name: 'A. H. Tammsaare',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Tõde ja õigus', 'Kõrboja peremees', \"Ma armastasin sakslast\"]\n    },\n    {\n      name: 'Juhan Liiv',\n      imageUrl:'https://upload.wikimedia.org/wikipedia/commons/9/95/Juhan_Liiv.jpg',\n      imageSource:'Wikimedia Commons',\n      books: ['Helin', 'Vari', \"Mitte igaühele\"]\n      },\n    {\n    name: 'Fr. Tuglas',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Väike Illimar', 'Meri', 'Popi ja Huhhuu']\n    },\n    {\n    name: 'Oskar Luts',\n    imageUrl:'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Suvi', 'Kevade', 'Talve']\n    }\n]\n\nexport const createSelectionList = (authors) => {\n  const allbooks = reduce(authors, (p, c) => {\n    return p.concat(c.books)\n  }, []);\n  function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n    return array;\n  }\n  let threeRandomBooks = shuffle(allbooks).slice(0, 3); \n  const fourBooksList = sample(threeRandomBooks);\n  return{\n    books: threeRandomBooks,\n    author: authors.find((author)=>author.books.some((title)=>title===fourBooksList)),\n    checkAnswer: function(title){\n        return this.author.books.some(function (t) {\n           return t === title;\n        });\n     }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
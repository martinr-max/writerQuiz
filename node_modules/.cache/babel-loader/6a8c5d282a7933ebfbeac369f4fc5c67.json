{"ast":null,"code":"import { chain, sample } from 'underscore';\nexport const writers = [{\n  name: 'Eno Raud',\n  imageUrl: 'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n  books: ['Sipsik', 'Naksitrallid']\n}, {\n  name: 'Jaan Kross',\n  imageUrl: 'https://kirjanduskeskus.ee/wp-content/uploads/2020/02/fc2535e27450857385-88712233.jpg',\n  books: ['Kolme katku vahel', 'Tahtamaa']\n}, {\n  name: 'A. H. Tammsaare',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n  imageSource: 'Wikimedia Commons',\n  imageAttribution: 'Daniel Ogren',\n  books: ['Tõde ja õigus', 'Kõrboja peremees']\n}, {\n  name: 'Fr. Tuglas',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Väike Illimar', 'Meri']\n}, {\n  name: 'Oskar Luts',\n  imageUrl: 'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n  imageSource: 'Wikimedia Commons',\n  books: ['Suvi', 'Kevade', 'Talve']\n}];\n\nfunction getTurnBooks(authors) {\n  return chain(authors).reduce((books, author) => books.concat(author.books), []).shuffle().slice(0, 4).value();\n}\n\nexport function getTurnData(authors) {\n  const books = getTurnBooks(authors);\n  const answer = sample(books);\n  const author = authors.find(a => a.books.includes(answer));\n  return {\n    books,\n    author\n  };\n}","map":{"version":3,"sources":["/Users/martinraba/Desktop/writersquiz/src/Writers.js"],"names":["chain","sample","writers","name","imageUrl","books","imageSource","imageAttribution","getTurnBooks","authors","reduce","author","concat","shuffle","slice","value","getTurnData","answer","find","a","includes"],"mappings":"AAAA,SAAQA,KAAR,EAAeC,MAAf,QAA4B,YAA5B;AAGA,OAAO,MAAMC,OAAO,GAAE,CAClB;AACAC,EAAAA,IAAI,EAAE,UADN;AAEAC,EAAAA,QAAQ,EAAC,gEAFT;AAGAC,EAAAA,KAAK,EAAE,CAAC,QAAD,EAAW,cAAX;AAHP,CADkB,EAMlB;AACAF,EAAAA,IAAI,EAAE,YADN;AAEAC,EAAAA,QAAQ,EAAC,uFAFT;AAGAC,EAAAA,KAAK,EAAE,CAAC,mBAAD,EAAsB,UAAtB;AAHP,CANkB,EAWlB;AACAF,EAAAA,IAAI,EAAE,iBADN;AAEAC,EAAAA,QAAQ,EAAC,0FAFT;AAGAE,EAAAA,WAAW,EAAC,mBAHZ;AAIAC,EAAAA,gBAAgB,EAAC,cAJjB;AAKAF,EAAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,kBAAlB;AALP,CAXkB,EAkBlB;AACAF,EAAAA,IAAI,EAAE,YADN;AAEAC,EAAAA,QAAQ,EAAC,gFAFT;AAGAE,EAAAA,WAAW,EAAC,mBAHZ;AAIAD,EAAAA,KAAK,EAAE,CAAC,eAAD,EAAkB,MAAlB;AAJP,CAlBkB,EAwBlB;AACAF,EAAAA,IAAI,EAAE,YADN;AAEAC,EAAAA,QAAQ,EAAC,6DAFT;AAGAE,EAAAA,WAAW,EAAC,mBAHZ;AAIAD,EAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB;AAJP,CAxBkB,CAAf;;AAgCP,SAASG,YAAT,CAAsBC,OAAtB,EAA+B;AAC9B,SAAOT,KAAK,CAACS,OAAD,CAAL,CACLC,MADK,CACE,CAACL,KAAD,EAAQM,MAAR,KAAmBN,KAAK,CAACO,MAAN,CAAaD,MAAM,CAACN,KAApB,CADrB,EACiD,EADjD,EAELQ,OAFK,GAGLC,KAHK,CAGC,CAHD,EAGI,CAHJ,EAILC,KAJK,EAAP;AAKA;;AAED,OAAO,SAASC,WAAT,CAAqBP,OAArB,EAA8B;AACpC,QAAMJ,KAAK,GAAGG,YAAY,CAACC,OAAD,CAA1B;AACA,QAAMQ,MAAM,GAAGhB,MAAM,CAACI,KAAD,CAArB;AACA,QAAMM,MAAM,GAAGF,OAAO,CAACS,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACd,KAAF,CAAQe,QAAR,CAAiBH,MAAjB,CAApB,CAAf;AAEA,SAAO;AAAEZ,IAAAA,KAAF;AAASM,IAAAA;AAAT,GAAP;AACA","sourcesContent":["import {chain, sample} from 'underscore';\n\n\nexport const writers =[\n    {\n    name: 'Eno Raud',\n    imageUrl:'https://tnp.ee/wp-content/uploads/2016/04/eno-raud-235x300.jpg',\n    books: ['Sipsik', 'Naksitrallid']\n    },\n    {\n    name: 'Jaan Kross',\n    imageUrl:'https://kirjanduskeskus.ee/wp-content/uploads/2020/02/fc2535e27450857385-88712233.jpg',\n    books: ['Kolme katku vahel', 'Tahtamaa']\n    },\n    {\n    name: 'A. H. Tammsaare',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/a/a4/Anton_Hansen_Tammsaare%2C_000290.jpg',\n    imageSource:'Wikimedia Commons',\n    imageAttribution:'Daniel Ogren',\n    books: ['Tõde ja õigus', 'Kõrboja peremees']\n    },\n    {\n    name: 'Fr. Tuglas',\n    imageUrl:'https://upload.wikimedia.org/wikipedia/commons/3/32/Friedebert_Tuglas_1910.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Väike Illimar', 'Meri']\n    },\n    {\n    name: 'Oskar Luts',\n    imageUrl:'http://admin.entsyklopeedia.ee/Portreed/Luts%20Oskar%20.jpg',\n    imageSource:'Wikimedia Commons',\n    books: ['Suvi', 'Kevade', 'Talve']\n    }\n]\n\nfunction getTurnBooks(authors) {\n\treturn chain(authors)\n\t\t.reduce((books, author) => books.concat(author.books), [])\n\t\t.shuffle()\n\t\t.slice(0, 4)\n\t\t.value();\n}\n\nexport function getTurnData(authors) {\n\tconst books = getTurnBooks(authors);\n\tconst answer = sample(books);\n\tconst author = authors.find((a) => a.books.includes(answer));\n\n\treturn { books, author };\n}"]},"metadata":{},"sourceType":"module"}